version: "3.9"
services:
  reverse-proxy:
    container_name: reverse-proxy
    image: traefik:latest
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  srec-api:
    container_name: srec-api
    image: srec-api
    build:
      context: ./api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.srec-api.rule=Host(`${HOST}`) && PathPrefix(`/api`)"
    expose:
      - "8000"
    volumes:
      - ./api:/usr/api
    depends_on:
      - timescaledb
      - reverse-proxy
  srec-ui:
    container_name: srec-ui
    image: srec-ui
    build:
      context: ./ui
    environment:
      - BASE_URL=${BASE_URL}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.srec-ui.rule=Host(`${HOST}`)"
  timescaledb:
    container_name: pgres
    image: "timescale/timescaledb:latest-pg14"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - "pg_data:/var/lib/postgresql/data"

volumes:
  pg_data: